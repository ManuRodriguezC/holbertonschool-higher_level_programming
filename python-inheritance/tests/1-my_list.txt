=================
test to "my_list"
=================

This test uses for sorted the my_list
and the case the function failed print the error

    >>> MyList = __import__('1-my_list').MyList

it uses in:

1.
    >>> mod_doc = __import__('1-my_list').__doc__
    >>> len(mod_doc) > 1
    True

    >>> class_doc = __import__('1-my_list').MyList.__doc__
    >>> len(class_doc) > 1
    True

    >>> func_doc = __import__('1-my_list').MyList.print_sorted.__doc__
    >>> len(func_doc) > 1
    True

2.
    >>> issubclass(MyList, list)
    True

3.
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> my_list.append(5)
    >>> print(my_list)
    [1, 4, 2, 3, 5]

    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]

    >>> print(my_list)
    [1, 4, 2, 3, 5]

    >>> new = MyList()
    >>> new.append(-3)
    >>> new.append(-22)
    >>> new.append(1)
    >>> new.append(10)
    >>> new.append(5)
    >>> print(new)
    [-3, -22, 1, 10, 5]

    >>> new.print_sorted()
    [-22, -3, 1, 5, 10]

    >>> print(new)
    [-3, -22, 1, 10, 5]

    >>> new.print_sorted(1)
    Traceback (most recent call last):
    ...
    TypeError: print_sorted() takes 1 positional argument but 2 were given