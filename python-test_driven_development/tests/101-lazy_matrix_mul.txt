================================
Test "101-lazy_matrix_mul" module
================================

The test uses for check if can to multiplicate
two differents matrix with module NumPy.

    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Now use it:

1.
    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    array([[ 7, 10],
           [15, 22]])

2.
    >>> lazy_matrix_mul([[1, "2"], [3, 4]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_a should contain only integers or floats

3.
    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, "2"], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_b should contain only integers or floats

4.
    >>> lazy_matrix_mul([2, [3, 4]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: object of type 'int' has no len()

5.
    >>> lazy_matrix_mul([[1, 2], [3, 4]],[2, [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: object of type 'int' has no len()

6.
    >>> lazy_matrix_mul(1212, [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list

7.
    >>> lazy_matrix_mul([[1, 2], [3, 4]], 345)
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list

8.
    >>> lazy_matrix_mul([], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty

9.
    >>> lazy_matrix_mul([[1, 2], [3, 4]], [])
    Traceback (most recent call last):
    ...
    ValueError: m_b can't be empty

10.
    >>> lazy_matrix_mul([[], []])
    Traceback (most recent call last):
    ...
    TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

11.
    >>> lazy_matrix_mul([])
    Traceback (most recent call last):
    ...
    TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'
